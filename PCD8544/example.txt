/*	сохраняем данный файл в кодировке UTF-8		*/

 author: Golinskiy Konstantin	e-mail: golinskiy.konstantin@gmail.com
 
 

// Делаем настройки в файле PCD8544.h

/*
	подключение LCD_Nokia_5110_PCD8544_84x48:

	в CubeMX включаем SPI только на отправку скорость максимум 4 Мбит/с 
	оп даташиту написано что максимум 4 Мбит/с ( Serial interface maximum 4.0 Mbits/s )
	но я ставил 9 Мбит/с работало, на 18 Мбит/с уже не работало.

	( пины желательно называем как в коде если нет то в коде ставим нужные )

	GND	 ->   GND
	BL	 ->   +3.3V подсветка ( если нужно управлять подключаем к пину или шим )	
	VCC  ->   3.3V
	CIK	 ->   CLK SCK
	DIR	 ->	  MOSI
	DC	 ->   Выбор команда или данные
	CE	 ->   CS ( chip select )
	RST  ->   RST ( Reset )

*/

//##########  SETUP  ######################################################################################################################################
			
		// указываем порт SPI для HAL -------------------
		#define 	PCD8544_SPI_HAL 		hspi2
		//-----------------------------------------------
		
		//=== указываем порты ( если в кубе назвали их RES CS то тогда нечего указывать не нужно )
		
		#if defined (RST_GPIO_Port)
		#else
			#define RST_GPIO_Port   	GPIOA
			#define RST_Pin				GPIO_PIN_12
		#endif
		
		#if defined (DC_GPIO_Port)
		#else
			#define DC_GPIO_Port    GPIOA
			#define DC_Pin			GPIO_PIN_15
		#endif

		#if defined (CS_GPIO_Port)
		#else
			#define CS_GPIO_Port    GPIOA
			#define CS_Pin			GPIO_PIN_14
		#endif

		
		//=============================================================================
		
//##########################################################################################################################


// далее в файле fonts.h если не используем какойто шрифт то коментируем его для экономии памяти

//##############################################################################################################

//---- для экономии памяти шрифты которые не используються закоментировать -------------------------------------
			// Шрифт имеет кирилицу и латиницу
			#define FONT_6x8		//  6 x 8 pixels font size structure 
			#define FONT_7x9		//  7 x 9 pixels font size structure 
			#define FONT_11x18		//  11 x 18 pixels font size structure 
			#define FONT_16x26		//  16 x 26 pixels font size structure 
			// Только цифры -- only numbers
			#define FONT_16x28		//  16 x 28 pixels font size structure only numbers	
//--------------------------------------------------------------------------------------------------------------

//##############################################################################################################





	#include "PCD8544.h"

	#include "fonts.h"
	#include "bitmap.h"

	#include "stdio.h" // sprintf() printf()
	.........
	.........

main()=============================================================================================================================
	
///////////////////////////////////////////////////////////////////////////////////////

// инициализация дисплея
PCD8544_Init();

// выбираем расположение ( ротацию ) экрана
PCD8544_rotation(1);		// 0-стандартный( по умолчанию) 1-поворот на 180 градусов ( вызывать до формирования данных в буфере )

//-------------------------------------------------------------
// рисуем пиксель, записываем в буфер кадра но не выводим на экран ( указываем координаты ) 
PCD8544_Draw_pixel(1, 1);
// загоняем в буфер кадра картинку (массив logo)
// параметры координаты начала X Y, массив, ширина и высота картинки, цвет (PIX_OFF, PIX_ON)
PCD8544_DrawBitmap(4, 4, logo, 35, 40, PIX_ON);
// выводим сформированный буфер кадра на экран
PCD8544_Update();
//--------------------------------------------------------------

HAL_Delay (1000);

//-------------------------------------------------------------
// Функция контрастности и цветовой температуры
// контрастность от 0 по 7
// цветовая температура от 0 по 3 
PCD8544_contrast(3,0);
HAL_Delay (1000);
//-------------------------------------------------------------

//------------------------------------------------------------
// инверсия дисплея ( 1-инвертируем  0-изображение по умолчанию )
PCD8544_Inversion(1);
HAL_Delay (2000);
PCD8544_Inversion(0);
HAL_Delay (1000);
//-----------------------------------------------------------

//-----------------------------------------------------------
// выключаем/включаем отображение данных на экране ( очищаем экран но данные остаются в буфере кадра )
// 0- выключить, 1 - включить
PCD8544_Display_On_Off(0);
HAL_Delay (1000);

PCD8544_Display_On_Off(1);
HAL_Delay (1000);
//----------------------------------------------------------

//----------------------------------------------------------
// удаляем пиксель, записываем в буфер кадра но не выводим на экран ( указываем координаты ) 
PCD8544_Clear_pixel(1, 1);
PCD8544_Update();
//----------------------------------------------------------

HAL_Delay (1000);

//----------------------------------------------------------
// очищаем экран и буффер кадра
PCD8544_Clear();
// PCD8544_Clear_frame_buffer();	// Функция очистки буфера кадра ( само изображение на экране не удаляет )
//----------------------------------------------------------

//-----------------------------------------------------------

//----------------------------------------------------------
// печать одного символа ( подерживает латиницу кириллицу ( в том числе Укр яз )
// параметры координаты X Y, сам символ, размер шрифта, множитель, цвет ( PIX_ON- белый , PIX_OFF -черный )
// шрифты &Font_6x8   &Font_7x9   &Font_11x18  &Font_16x26  ( &Font_16x28 - только Цифры )
PCD8544_DrawChar(10, 10, 'A', &Font_6x8, 1, PIX_ON );
PCD8544_Update();
//---------------------------------------------------------

HAL_Delay (1000);

// очищаем экран и буффер кадра
PCD8544_Clear();

//---------------------------------------------------------
// печать строки ( подерживает латиницу кириллицу ( в том числе Укр яз )
// параметры координаты начало строки X Y, сама строка, размер шрифта, множитель, цвет ( PIX_ON- белый , PIX_OFF -черный )
// шрифты &Font_6x8   &Font_7x9   &Font_11x18  &Font_16x26  ( &Font_16x28 - только Цифры )
PCD8544_Print(1, 10, "Привет Hello!", &Font_6x8, 1, PIX_ON );
PCD8544_Print(1, 25, "Одесса", &Font_11x18, 1, PIX_ON );
PCD8544_Update();
//---------------------------------------------------------

HAL_Delay (1000);


// очищаем экран и буффер кадра
PCD8544_Clear();

//--------------------------------------------------------------------------
for( uint16_t i = 0; i < 127; i++ ){
	char f[4];
	sprintf(f,"%3d", i);
	PCD8544_Print ( 20, 20, f, &Font_6x8, 3, PIX_ON ); // печатаем надпись с указаным шрифтом и цветом ( PIX_ON- белый , PIX_OFF -черный )
	// выводим сформированный буфер кадра на экран
	PCD8544_Update();
	HAL_Delay (300);
}

// очищаем экран и буффер кадра
PCD8544_Clear();
//---------------------------------------------------------------------------
	

//// рисуем разные фигуры*****************************************************
//PCD8544_Draw_line( 20, 20, 30, 30, PIX_ON );			// ( PIX_ON- белый , PIX_OFF -черный )
//PCD8544_Draw_rectangle( 40, 40, 10, 20, PIX_ON );			// ( PIX_ON- белый , PIX_OFF -черный )
//PCD8544_Draw_rectangle_filled(70, 30, 10, 20, PIX_ON );			// ( PIX_ON- белый , PIX_OFF -черный )
//PCD8544_Draw_triangle( 20, 20, 50, 30, 100, 20, PIX_ON );			// ( PIX_ON- белый , PIX_OFF -черный )
//PCD8544_Draw_triangle_filled( 20, 20, 51, 31, 100, 20, PIX_ON );			// ( PIX_ON- белый , PIX_OFF -черный )
//PCD8544_Draw_circle( 40, 40, 20, PIX_ON );			// ( PIX_ON- белый , PIX_OFF -черный )
//PCD8544_Draw_circle_filled( 40, 40, 20, PIX_ON );			// ( PIX_ON- белый , PIX_OFF -черный )

// рисуем прямоугольник с закругленными краями ( закрашенный )
//PCD8544_DrawFillRoundRect(10, 10, 50, 50, 10, PIX_ON);			// ( PIX_ON- белый , PIX_OFF -черный )
	
// рисуем прямоугольник с закругленными краями ( пустотелый )
//PCD8544_DrawRoundRect(10, 10, 50, 50, 10, PIX_ON);			// ( PIX_ON- белый , PIX_OFF -черный )
	
// рисуем полукруг ( правое или левое полушарие (параметр 1 или 2) ) закрашенный
//PCD8544_DrawFillCircleHelper(30, 30, 20 , 1, 0, PIX_ON);			// ( PIX_ON- белый , PIX_OFF -черный )
	
// рисуем дугу ( четверть круга (параметр 1, 2, 4, 8) ) шириной 1 пиксель
//PCD8544_DrawCircleHelper(30, 30, 20 , 1, PIX_ON);			// ( PIX_ON- белый , PIX_OFF -черный )
	
//// выводим сформированный буфер кадра на экран
//PCD8544_Update();
////**************************************************************************


///////////////////////////////////////////////////////////////////////////////////////

	


	.........
	.........
	.........
	.........

=== end while(1) ==================================================================================================================
=== end main() ====================================================================================================================
